package view;

import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import java.awt.SystemColor;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.awt.Color;
import javax.swing.JTextField;
import com.toedter.calendar.JDateChooser;
import java.awt.Font;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.Toolkit;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;

@SuppressWarnings("serial")
public class RegistroReservas extends JFrame {

	private JPanel contentPane;
	public static JTextField txtValor;
	public static JDateChooser txtFechaEntrada;
	public static JDateChooser txtFechaSalida;
	public static JComboBox<String> txtFormaPago;
	int xMouse, yMouse;
	private JLabel labelExit;
	private JLabel labelAtras;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					RegistroReservas frame = new RegistroReservas();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public RegistroReservas() {
		super("Registro reserva - Hotel Alura");
		setIconImage(Toolkit.getDefaultToolkit().getImage(RegistroReservas.class.getResource("/imagenes/aH-40px.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 910, 560);
		setResizable(false);
		contentPane = new JPanel();
		contentPane.setBackground(SystemColor.control);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		setResizable(false);
		setLocationRelativeTo(null);
		setUndecorated(true);

		JPanel panel = new JPanel();
		panel.setBorder(null);
		panel.setBackground(Color.WHITE);
		panel.setBounds(0, 0, 910, 560);
		contentPane.add(panel);
		panel.setLayout(null);

		// Código que crea los elementos de la interfáz gráfica
		JPanel header = new JPanel();
		header.setBounds(0, 0, 910, 36);
		header.addMouseMotionListener(new MouseMotionAdapter() {
			@Override
			public void mouseDragged(MouseEvent e) {
				headerMouseDragged(e);
			}
		});
		header.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {
				headerMousePressed(e);
			}
		});
		
		JPanel panel_1 = new JPanel();
		panel_1.setBounds(428, 0, 482, 560);
		panel_1.setBackground(new Color(12, 138, 199));
		panel.add(panel_1);
		panel_1.setLayout(null);
		
		JLabel logo = new JLabel("");
		logo.setBounds(197, 68, 104, 107);
		panel_1.add(logo);
		logo.setIcon(new ImageIcon(RegistroReservas.class.getResource("/imagenes/Ha-100px.png")));
		
		JLabel imagenFondo = new JLabel("");
		imagenFondo.setBounds(0, 140, 482, 420);
		panel_1.add(imagenFondo);
		imagenFondo.setBackground(Color.WHITE);
		imagenFondo.setIcon(new ImageIcon(RegistroReservas.class.getResource("/imagenes/reservas-img-3.png")));
		
				final JPanel btnexit = new JPanel();
				btnexit.setBounds(429, 0, 53, 36);
				btnexit.addMouseListener(new MouseAdapter() {
					@Override
					public void mouseClicked(MouseEvent e) {
						MenuPrincipal principal = new MenuPrincipal();
						principal.setVisible(true);
						dispose();
					}

					@Override
					public void mouseEntered(MouseEvent e) {
						btnexit.setBackground(Color.red);
						labelExit.setForeground(Color.white);
					}

					@Override
					public void mouseExited(MouseEvent e) {
						btnexit.setBackground(new Color(12, 138, 199));
						labelExit.setForeground(Color.white);
					}
				});
				btnexit.setLayout(null);
				btnexit.setBackground(new Color(12, 138, 199));
				panel_1.add(btnexit);
				
						labelExit = new JLabel("X");
						labelExit.setForeground(Color.WHITE);
						labelExit.setBounds(0, 0, 53, 36);
						btnexit.add(labelExit);
						labelExit.setHorizontalAlignment(SwingConstants.CENTER);
						labelExit.setFont(new Font("Roboto", Font.PLAIN, 18));
		header.setLayout(null);
		header.setBackground(Color.WHITE);
		panel.add(header);
		
		JPanel panel_2 = new JPanel();
		panel_2.setBounds(0, 0, 428, 560);
		panel.add(panel_2);
		GridBagLayout gbl_panel_2 = new GridBagLayout();
		gbl_panel_2.columnWidths = new int[] {14, 400, 14};
		gbl_panel_2.rowHeights = new int[]{42, 14, 36, 14, 35, 11, 14, 33, 2, 24, 38, 14, 30, 35, 0};
		gbl_panel_2.columnWeights = new double[]{0.0, 0.0};
		gbl_panel_2.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel_2.setLayout(gbl_panel_2);
								
										JLabel lblTitulo = new JLabel("REGISTRO DE RESERVA");
										GridBagConstraints gbc_lblTitulo = new GridBagConstraints();
										gbc_lblTitulo.fill = GridBagConstraints.BOTH;
										gbc_lblTitulo.insets = new Insets(0, 0, 5, 0);
										gbc_lblTitulo.gridx = 2;
										gbc_lblTitulo.gridy = 0;
										panel_2.add(lblTitulo, gbc_lblTitulo);
										lblTitulo.setHorizontalAlignment(SwingConstants.CENTER);
										lblTitulo.setForeground(new Color(12, 138, 199));
										lblTitulo.setFont(new Font("Roboto", Font.BOLD, 20));
								
										JLabel lblCheckIn = new JLabel("FECHA DE CHECK IN");
										GridBagConstraints gbc_lblCheckIn = new GridBagConstraints();
										gbc_lblCheckIn.anchor = GridBagConstraints.WEST;
										gbc_lblCheckIn.fill = GridBagConstraints.VERTICAL;
										gbc_lblCheckIn.insets = new Insets(0, 0, 5, 5);
										gbc_lblCheckIn.gridx = 0;
										gbc_lblCheckIn.gridy = 1;
										panel_2.add(lblCheckIn, gbc_lblCheckIn);
										lblCheckIn.setForeground(SystemColor.textInactiveText);
										lblCheckIn.setFont(new Font("Roboto Black", Font.PLAIN, 18));
								
										// Campos que guardaremos en la base de datos
										txtFechaEntrada = new JDateChooser();
										GridBagConstraints gbc_txtFechaEntrada = new GridBagConstraints();
										gbc_txtFechaEntrada.fill = GridBagConstraints.BOTH;
										gbc_txtFechaEntrada.insets = new Insets(0, 0, 5, 5);
										gbc_txtFechaEntrada.gridx = 0;
										gbc_txtFechaEntrada.gridy = 2;
										panel_2.add(txtFechaEntrada, gbc_txtFechaEntrada);
										txtFechaEntrada.getCalendarButton().setBackground(SystemColor.textHighlight);
										txtFechaEntrada.getCalendarButton()
												.setIcon(new ImageIcon(RegistroReservas.class.getResource("/imagenes/icon-reservas.png")));
										txtFechaEntrada.getCalendarButton().setFont(new Font("Roboto", Font.PLAIN, 12));
										txtFechaEntrada.getCalendarButton().setBounds(268, 0, 21, 33);
										txtFechaEntrada.setBackground(Color.WHITE);
										txtFechaEntrada.setBorder(new LineBorder(SystemColor.window));
										txtFechaEntrada.setDateFormatString("yyyy-MM-dd");
										txtFechaEntrada.setFont(new Font("Roboto", Font.PLAIN, 18));
						
								JSeparator separator_1 = new JSeparator();
								GridBagConstraints gbc_separator_1 = new GridBagConstraints();
								gbc_separator_1.anchor = GridBagConstraints.SOUTH;
								gbc_separator_1.fill = GridBagConstraints.HORIZONTAL;
								gbc_separator_1.insets = new Insets(0, 0, 5, 5);
								gbc_separator_1.gridx = 0;
								gbc_separator_1.gridy = 2;
								panel_2.add(separator_1, gbc_separator_1);
								separator_1.setForeground(SystemColor.textHighlight);
								separator_1.setBackground(SystemColor.textHighlight);
								
										JLabel lblCheckOut = new JLabel("FECHA DE CHECK OUT");
										GridBagConstraints gbc_lblCheckOut = new GridBagConstraints();
										gbc_lblCheckOut.anchor = GridBagConstraints.WEST;
										gbc_lblCheckOut.fill = GridBagConstraints.VERTICAL;
										gbc_lblCheckOut.insets = new Insets(0, 0, 5, 5);
										gbc_lblCheckOut.gridx = 0;
										gbc_lblCheckOut.gridy = 3;
										panel_2.add(lblCheckOut, gbc_lblCheckOut);
										lblCheckOut.setForeground(SystemColor.textInactiveText);
										lblCheckOut.setFont(new Font("Roboto Black", Font.PLAIN, 18));
								
										txtFechaSalida = new JDateChooser();
										GridBagConstraints gbc_txtFechaSalida = new GridBagConstraints();
										gbc_txtFechaSalida.fill = GridBagConstraints.BOTH;
										gbc_txtFechaSalida.insets = new Insets(0, 0, 5, 5);
										gbc_txtFechaSalida.gridx = 0;
										gbc_txtFechaSalida.gridy = 4;
										panel_2.add(txtFechaSalida, gbc_txtFechaSalida);
										txtFechaSalida.getCalendarButton()
												.setIcon(new ImageIcon(RegistroReservas.class.getResource("/imagenes/icon-reservas.png")));
										txtFechaSalida.getCalendarButton().setFont(new Font("Roboto", Font.PLAIN, 11));
										txtFechaSalida.getCalendarButton().setBounds(267, 1, 21, 31);
										txtFechaSalida.setBackground(Color.WHITE);
										txtFechaSalida.setFont(new Font("Roboto", Font.PLAIN, 18));
										txtFechaSalida.addPropertyChangeListener(new PropertyChangeListener() {
											public void propertyChange(PropertyChangeEvent evt) {
												// Activa el evento, después del usuario seleccionar las fechas se debe calcular
												// el valor de la reserva
											}
										});
										txtFechaSalida.setDateFormatString("yyyy-MM-dd");
										txtFechaSalida.getCalendarButton().setBackground(SystemColor.textHighlight);
										txtFechaSalida.setBorder(new LineBorder(new Color(255, 255, 255), 0));
						
								JSeparator separator_2 = new JSeparator();
								GridBagConstraints gbc_separator_2 = new GridBagConstraints();
								gbc_separator_2.fill = GridBagConstraints.BOTH;
								gbc_separator_2.insets = new Insets(0, 0, 5, 5);
								gbc_separator_2.gridx = 0;
								gbc_separator_2.gridy = 5;
								panel_2.add(separator_2, gbc_separator_2);
								separator_2.setForeground(SystemColor.textHighlight);
								separator_2.setBackground(SystemColor.textHighlight);
								
										JLabel lblValor = new JLabel("VALOR DE LA RESERVA");
										GridBagConstraints gbc_lblValor = new GridBagConstraints();
										gbc_lblValor.anchor = GridBagConstraints.WEST;
										gbc_lblValor.fill = GridBagConstraints.VERTICAL;
										gbc_lblValor.insets = new Insets(0, 0, 5, 5);
										gbc_lblValor.gridx = 0;
										gbc_lblValor.gridy = 6;
										panel_2.add(lblValor, gbc_lblValor);
										lblValor.setForeground(SystemColor.textInactiveText);
										lblValor.setFont(new Font("Roboto Black", Font.PLAIN, 18));
												
														txtValor = new JTextField();
														GridBagConstraints gbc_txtValor = new GridBagConstraints();
														gbc_txtValor.fill = GridBagConstraints.BOTH;
														gbc_txtValor.insets = new Insets(0, 0, 5, 5);
														gbc_txtValor.gridx = 0;
														gbc_txtValor.gridy = 7;
														panel_2.add(txtValor, gbc_txtValor);
														txtValor.setBackground(SystemColor.text);
														txtValor.setForeground(Color.BLACK);
														txtValor.setFont(new Font("Roboto Black", Font.BOLD, 17));
														txtValor.setBorder(javax.swing.BorderFactory.createEmptyBorder());
														txtValor.setColumns(10);
										
										
												JSeparator separator_3 = new JSeparator();
												GridBagConstraints gbc_separator_3 = new GridBagConstraints();
												gbc_separator_3.anchor = GridBagConstraints.NORTH;
												gbc_separator_3.fill = GridBagConstraints.HORIZONTAL;
												gbc_separator_3.insets = new Insets(0, 0, 5, 5);
												gbc_separator_3.gridx = 0;
												gbc_separator_3.gridy = 8;
												panel_2.add(separator_3, gbc_separator_3);
												separator_3.setForeground(SystemColor.textHighlight);
												separator_3.setBackground(SystemColor.textHighlight);
								
										JLabel lblFormaPago = new JLabel("FORMA DE PAGO");
										GridBagConstraints gbc_lblFormaPago = new GridBagConstraints();
										gbc_lblFormaPago.anchor = GridBagConstraints.WEST;
										gbc_lblFormaPago.fill = GridBagConstraints.VERTICAL;
										gbc_lblFormaPago.insets = new Insets(0, 0, 5, 5);
										gbc_lblFormaPago.gridx = 0;
										gbc_lblFormaPago.gridy = 9;
										panel_2.add(lblFormaPago, gbc_lblFormaPago);
										lblFormaPago.setForeground(SystemColor.textInactiveText);
										lblFormaPago.setFont(new Font("Roboto Black", Font.PLAIN, 18));
						
								JSeparator separator_4 = new JSeparator();
								GridBagConstraints gbc_separator_4 = new GridBagConstraints();
								gbc_separator_4.anchor = GridBagConstraints.SOUTH;
								gbc_separator_4.fill = GridBagConstraints.HORIZONTAL;
								gbc_separator_4.insets = new Insets(0, 0, 5, 5);
								gbc_separator_4.gridx = 0;
								gbc_separator_4.gridy = 10;
								panel_2.add(separator_4, gbc_separator_4);
								separator_4.setForeground(SystemColor.textHighlight);
								separator_4.setBackground(SystemColor.textHighlight);
				
						txtFormaPago = new JComboBox<String>();
						GridBagConstraints gbc_txtFormaPago = new GridBagConstraints();
						gbc_txtFormaPago.fill = GridBagConstraints.BOTH;
						gbc_txtFormaPago.insets = new Insets(0, 0, 5, 5);
						gbc_txtFormaPago.gridx = 0;
						gbc_txtFormaPago.gridy = 10;
						panel_2.add(txtFormaPago, gbc_txtFormaPago);
						txtFormaPago.setBackground(SystemColor.text);
						txtFormaPago.setBorder(new LineBorder(new Color(255, 255, 255), 1, true));
						txtFormaPago.setFont(new Font("Roboto", Font.PLAIN, 16));
						txtFormaPago.setModel(new DefaultComboBoxModel<String>(
								new String[] { "Tarjeta de Crédito", "Tarjeta de Débito", "Dinero en efectivo" }));
				
						JLabel lblHusped = new JLabel("HUÉSPED");
						GridBagConstraints gbc_lblHusped = new GridBagConstraints();
						gbc_lblHusped.fill = GridBagConstraints.BOTH;
						gbc_lblHusped.insets = new Insets(0, 0, 5, 5);
						gbc_lblHusped.gridx = 0;
						gbc_lblHusped.gridy = 11;
						panel_2.add(lblHusped, gbc_lblHusped);
						lblHusped.setForeground(SystemColor.textInactiveText);
						lblHusped.setFont(new Font("Roboto Black", Font.PLAIN, 18));
		
				JPanel btnNuevoHuesped = new JPanel();
				GridBagConstraints gbc_btnNuevoHuesped = new GridBagConstraints();
				gbc_btnNuevoHuesped.insets = new Insets(0, 0, 0, 5);
				gbc_btnNuevoHuesped.fill = GridBagConstraints.BOTH;
				gbc_btnNuevoHuesped.gridx = 0;
				gbc_btnNuevoHuesped.gridy = 13;
				panel_2.add(btnNuevoHuesped, gbc_btnNuevoHuesped);
				btnNuevoHuesped.setToolTipText("");
				btnNuevoHuesped.addMouseListener(new MouseAdapter() {
					@Override
					public void mouseClicked(MouseEvent e) {
//				TO DO: controlar que fechaSalida sea posterior a fechaEntrada
//				TO DO: ¿por que mierda no me sale bien ese if?
						if (RegistroReservas.txtFechaEntrada.getDate() != null
								&& RegistroReservas.txtFechaSalida.getDate() != null) {
							RegistroHuesped registro = new RegistroHuesped(RegistroReservas.this);
							registro.setVisible(true);
						} else {
							JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
						}
					}
				});
				btnNuevoHuesped.setLayout(null);
				btnNuevoHuesped.setBackground(SystemColor.textHighlight);
				btnNuevoHuesped.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
				
						JLabel labelNuevoHuesped = new JLabel("NUEVO");
						labelNuevoHuesped.setHorizontalAlignment(SwingConstants.CENTER);
						labelNuevoHuesped.setForeground(new Color(255, 255, 255));
						labelNuevoHuesped.setFont(new Font("Roboto", Font.PLAIN, 18));
						labelNuevoHuesped.setBounds(0, 0, 150, 35);
						btnNuevoHuesped.add(labelNuevoHuesped);

		final JPanel btnAtras = new JPanel();
		btnAtras.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				MenuUsuario usuario = new MenuUsuario();
				usuario.setVisible(true);
				dispose();
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				btnAtras.setBackground(new Color(12, 138, 199));
				labelAtras.setForeground(Color.white);
			}

			@Override
			public void mouseExited(MouseEvent e) {
				btnAtras.setBackground(Color.white);
				labelAtras.setForeground(Color.black);
			}
		});
		btnAtras.setLayout(null);
		btnAtras.setBackground(Color.WHITE);
		btnAtras.setBounds(0, 0, 53, 36);
		header.add(btnAtras);

		labelAtras = new JLabel("<");
		labelAtras.setBounds(0, 0, 53, 36);
		btnAtras.add(labelAtras);
		labelAtras.setHorizontalAlignment(SwingConstants.CENTER);
		labelAtras.setFont(new Font("Roboto", Font.PLAIN, 23));

		JLabel lblSiguiente = new JLabel("SIGUIENTE");
		lblSiguiente.setHorizontalAlignment(SwingConstants.CENTER);
		lblSiguiente.setForeground(Color.WHITE);
		lblSiguiente.setFont(new Font("Roboto", Font.PLAIN, 18));
		lblSiguiente.setBounds(0, 0, 122, 35);
	}

	// Código que permite mover la ventana por la pantalla según la posición de "x"
	// y "y"
	private void headerMousePressed(java.awt.event.MouseEvent evt) {
		xMouse = evt.getX();
		yMouse = evt.getY();
	}

	private void headerMouseDragged(java.awt.event.MouseEvent evt) {
		int x = evt.getXOnScreen();
		int y = evt.getYOnScreen();
		this.setLocation(x - xMouse, y - yMouse);
	}
}
